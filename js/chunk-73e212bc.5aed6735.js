(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-73e212bc"],{"2a29":function(n,r,t){"use strict";var a=t("52d4"),e=t.n(a);e.a},"3c0d":function(n,r,t){"use strict";t.r(r);var a=function(){var n=this,r=n.$createElement;n._self._c;return n._m(0)},e=[function(){var n=this,r=n.$createElement,t=n._self._c||r;return t("div",{staticClass:"page"},[t("div",[t("h4",[n._v("常规解决方案（*10^n转整数计算的方法经实践已发现本身计算就有坑）：")]),t("p",[n._v(" 1、(yyds) toFixed() 方法可把 Number "),t("span",{staticStyle:{color:"red"}},[n._v("四舍五入")]),n._v("为指定小数位数的数字。（IE 6，7，8浏览器中可能有坑） ")]),t("pre",[n._v("      NumberObject.toFixed(num)\n\n      num 规定小数的位数，是 0 ~ 20 之间的值，包括 0 和 20，有些实现可以支持更大的数值范围。如果省略了该参数，将用 0 代替。\n    ")]),t("p",[n._v("2、引用类库（待研究）")]),t("a",{attrs:{href:"https://github.com/josdejong/mathjs",target:"_blank"}},[n._v("math.js")]),t("br"),t("br"),t("a",{attrs:{href:"https://github.com/MikeMcl/decimal.js",target:"_blank"}},[n._v("decimal.js")]),t("br"),t("br"),t("a",{attrs:{href:"https://github.com/MikeMcl/big.js/",target:"_blank"}},[n._v("big.js")]),t("p",[n._v("3、 重写 Number 原型方法（参考）")]),t("pre",[n._v('    // 加法\n      function accAdd(arg1, arg2) {\n          var r1, r2, m, c;\n          try {\n              r1 = arg1.toString().split(".")[1].length;\n          }\n          catch (e) {\n              r1 = 0;\n          }\n          try {\n              r2 = arg2.toString().split(".")[1].length;\n          }\n          catch (e) {\n              r2 = 0;\n          }\n          c = Math.abs(r1 - r2);\n          m = Math.pow(10, Math.max(r1, r2));\n          if (c > 0) {\n              var cm = Math.pow(10, c);\n              if (r1 > r2) {\n                  arg1 = Number(arg1.toString().replace(".", ""));\n                  arg2 = Number(arg2.toString().replace(".", "")) * cm;\n              } else {\n                  arg1 = Number(arg1.toString().replace(".", "")) * cm;\n                  arg2 = Number(arg2.toString().replace(".", ""));\n              }\n          } else {\n              arg1 = Number(arg1.toString().replace(".", ""));\n              arg2 = Number(arg2.toString().replace(".", ""));\n          }\n          return (arg1 + arg2) / m;\n      }\n      Number.prototype.add = function (arg) {\n          return accAdd(arg, this);\n      };\n\n        // 减法\n        function accSub(arg1, arg2) {\n            var r1, r2, m, n;\n            try {\n                r1 = arg1.toString().split(".")[1].length;\n            }\n            catch (e) {\n                r1 = 0;\n            }\n            try {\n                r2 = arg2.toString().split(".")[1].length;\n            }\n            catch (e) {\n                r2 = 0;\n            }\n            m = Math.pow(10, Math.max(r1, r2)); //last modify by deeka //动态控制精度长度\n            n = (r1 >= r2) ? r1 : r2;\n            return ((arg1 * m - arg2 * m) / m).toFixed(n);\n        }\n        Number.prototype.sub = function (arg) {\n            return accMul(arg, this);\n        };\n\n        // 乘法\n        function accMul(arg1, arg2) {\n            var m = 0, s1 = arg1.toString(), s2 = arg2.toString();\n            try {\n                m += s1.split(".")[1].length;\n            }\n            catch (e) {\n            }\n            try {\n                m += s2.split(".")[1].length;\n            }\n            catch (e) {\n            }\n            return Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m);\n        }\n        Number.prototype.mul = function (arg) {\n            return accMul(arg, this);\n        };\n\n        // 除法\n        function accDiv(arg1, arg2) {\n            var t1 = 0, t2 = 0, r1, r2;\n            try {\n                t1 = arg1.toString().split(".")[1].length;\n            }\n            catch (e) {\n            }\n            try {\n                t2 = arg2.toString().split(".")[1].length;\n            }\n            catch (e) {\n            }\n            with (Math) {\n                r1 = Number(arg1.toString().replace(".", ""));\n                r2 = Number(arg2.toString().replace(".", ""));\n                return (r1 / r2) * pow(10, t2 - t1);\n            }\n        }\n        Number.prototype.div = function (arg) {\n            return accDiv(this, arg);\n        };\n    ')])])])}],c={components:{}},g=c,i=(t("2a29"),t("2877")),o=Object(i["a"])(g,a,e,!1,null,"05dac955",null);r["default"]=o.exports},"52d4":function(n,r,t){}}]);
//# sourceMappingURL=chunk-73e212bc.5aed6735.js.map